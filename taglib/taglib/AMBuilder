# vim: sts=2 ts=8 sw=2 tw=99 et ft=python:
import os

builder.SetBuildFolder('taglib')

binary = builder.compiler.StaticLibrary('taglib')

binary.compiler.includes += [
  os.path.join(builder.sourcePath, 'taglib', 'taglib'),
  os.path.join(builder.sourcePath, 'taglib', '3rdparty'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'toolkit'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'mpeg'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'mpeg', 'id3v1'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'mpeg', 'id3v2'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'mpeg', 'id3v2', 'frames'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'ogg'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'ogg', 'vorbis'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'ogg', 'flac'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'ogg', 'speex'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'ogg', 'opus'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'flac'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'ape'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'mpc'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'wavpack'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'trueaudio'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'riff'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'riff', 'aiff'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'riff', 'wav'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'asf'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'mp4'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'mod'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'it'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 's3m'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'xm'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'dsf'),
  os.path.join(builder.sourcePath, 'taglib', 'taglib', 'dsdiff'),
]

binary.compiler.defines += ['TAGLIB_STATIC']

if binary.compiler.vendor == 'gcc' or binary.compiler.vendor == 'clang':
  binary.compiler.cxxflags += ['-fexceptions']
  
binary.sources += [
  'mpeg/mpegfile.cpp',
  'mpeg/mpegproperties.cpp',
  'mpeg/mpegheader.cpp',
  'mpeg/xingheader.cpp',
  'mpeg/id3v1/id3v1tag.cpp',
  'mpeg/id3v1/id3v1genres.cpp',
  'mpeg/id3v2/id3v2framefactory.cpp',
  'mpeg/id3v2/id3v2synchdata.cpp',
  'mpeg/id3v2/id3v2tag.cpp',
  'mpeg/id3v2/id3v2header.cpp',
  'mpeg/id3v2/id3v2frame.cpp',
  'mpeg/id3v2/id3v2footer.cpp',
  'mpeg/id3v2/id3v2extendedheader.cpp',
  'mpeg/id3v2/frames/attachedpictureframe.cpp',
  'mpeg/id3v2/frames/commentsframe.cpp',
  'mpeg/id3v2/frames/eventtimingcodesframe.cpp',
  'mpeg/id3v2/frames/generalencapsulatedobjectframe.cpp',
  'mpeg/id3v2/frames/ownershipframe.cpp',
  'mpeg/id3v2/frames/popularimeterframe.cpp',
  'mpeg/id3v2/frames/privateframe.cpp',
  'mpeg/id3v2/frames/relativevolumeframe.cpp',
  'mpeg/id3v2/frames/synchronizedlyricsframe.cpp',
  'mpeg/id3v2/frames/textidentificationframe.cpp',
  'mpeg/id3v2/frames/uniquefileidentifierframe.cpp',
  'mpeg/id3v2/frames/unknownframe.cpp',
  'mpeg/id3v2/frames/unsynchronizedlyricsframe.cpp',
  'mpeg/id3v2/frames/urllinkframe.cpp',
  'mpeg/id3v2/frames/chapterframe.cpp',
  'mpeg/id3v2/frames/tableofcontentsframe.cpp',
  'mpeg/id3v2/frames/podcastframe.cpp',
  'ogg/oggfile.cpp',
  'ogg/oggpage.cpp',
  'ogg/oggpageheader.cpp',
  'ogg/xiphcomment.cpp',
  'ogg/vorbis/vorbisfile.cpp',
  'ogg/vorbis/vorbisproperties.cpp',
  'flac/flacfile.cpp',
  'flac/flacpicture.cpp',
  'flac/flacproperties.cpp',
  'flac/flacmetadatablock.cpp',
  'flac/flacunknownmetadatablock.cpp',
  'ogg/flac/oggflacfile.cpp',
  'mpc/mpcfile.cpp',
  'mpc/mpcproperties.cpp',
  'mp4/mp4file.cpp',
  'mp4/mp4atom.cpp',
  'mp4/mp4tag.cpp',
  'mp4/mp4item.cpp',
  'mp4/mp4properties.cpp',
  'mp4/mp4coverart.cpp',
  'ape/apetag.cpp',
  'ape/apefooter.cpp',
  'ape/apeitem.cpp',
  'ape/apefile.cpp',
  'ape/apeproperties.cpp',
  'wavpack/wavpackfile.cpp',
  'wavpack/wavpackproperties.cpp',
  'ogg/speex/speexfile.cpp',
  'ogg/speex/speexproperties.cpp',
  'ogg/opus/opusfile.cpp',
  'ogg/opus/opusproperties.cpp',
  'trueaudio/trueaudiofile.cpp',
  'trueaudio/trueaudioproperties.cpp',
  'asf/asftag.cpp',
  'asf/asffile.cpp',
  'asf/asfproperties.cpp',
  'asf/asfattribute.cpp',
  'asf/asfpicture.cpp',
  'riff/rifffile.cpp',
  'riff/aiff/aifffile.cpp',
  'riff/aiff/aiffproperties.cpp',
  'riff/wav/wavfile.cpp',
  'riff/wav/wavproperties.cpp',
  'riff/wav/infotag.cpp',
  'mod/modfilebase.cpp',
  'mod/modfile.cpp',
  'mod/modtag.cpp',
  'mod/modproperties.cpp',
  's3m/s3mfile.cpp',
  's3m/s3mproperties.cpp',
  'it/itfile.cpp',
  'it/itproperties.cpp',
  'xm/xmfile.cpp',
  'xm/xmproperties.cpp',
  'dsf/dsffile.cpp',
  'dsf/dsfproperties.cpp',
  'dsdiff/dsdifffile.cpp',
  'dsdiff/dsdiffproperties.cpp',
  'dsdiff/dsdiffdiintag.cpp',
  'toolkit/tstring.cpp',
  'toolkit/tstringlist.cpp',
  'toolkit/tbytevector.cpp',
  'toolkit/tbytevectorlist.cpp',
  'toolkit/tbytevectorstream.cpp',
  'toolkit/tiostream.cpp',
  'toolkit/tfile.cpp',
  'toolkit/tfilestream.cpp',
  'toolkit/tdebug.cpp',
  'toolkit/tpropertymap.cpp',
  'toolkit/trefcounter.cpp',
  'toolkit/tdebuglistener.cpp',
  'toolkit/tzlib.cpp',
  'tag.cpp',
  'tagunion.cpp',
  'fileref.cpp',
  'audioproperties.cpp',
  'tagutils.cpp',
]

rvalue = builder.Add(binary)